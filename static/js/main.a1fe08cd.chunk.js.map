{"version":3,"sources":["components/Movie.jsx","utils/API.js","store/actions/action.js","store/constants/actionTypes.js","components/SearchMovie.jsx","components/MovieList.jsx","containers/MovieListContainers.jsx","store/reducers/reducer.js","store/store.js","utils/fontawesome.js","components/MovieDetails.jsx","components/Navigation.jsx","components/Layout.jsx","App.js","serviceWorker.js","index.js"],"names":["Movie","props","history","useHistory","className","onClick","push","pathname","state","movie","style","cursor","borderRadius","src","poster_path","alt","title","overview","vote_average","icon","color","release_date","axios","create","baseURL","headers","Authorization","resetNextPage","type","mapDispatchToProps","setSearch","search","payload","connect","movies","useState","query","setQuery","useMemo","result","filter","toLowerCase","includes","useSearchMovie","useEffect","htmlFor","fontSize","value","onChange","e","target","id","placeholder","filteredMovies","paddingTop","map","key","getMovies","dispatch","a","API","get","res","data","moviesData","results","console","log","getMoreMovies","nextPage","display","justifyContent","backgroundColor","initialState","loading","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","library","add","fab","faStar","faVoteYea","faLanguage","faSync","faSearch","location","useLocation","position","aria-label","right","top","zIndex","aria-hidden","original_language","toUpperCase","vote_count","to","rel","href","data-tip","place","effect","Layout","children","App","store","exact","path","component","MovieListContainers","MovieDetails","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a1fe08cd.chunk.js","sourcesContent":["import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport default function Movie(props) {\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <div\r\n      className='card mb-3 shadow-sm bg-white'\r\n      onClick={() =>\r\n        history.push({\r\n          pathname: '/details',\r\n          state: {movie: props.movie},\r\n        })\r\n      }\r\n      style={{cursor: 'pointer', borderRadius: 0}}\r\n    >\r\n      <div className='row no-gutters'>\r\n        <div className='col-md-4'>\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w500${props.movie.poster_path}`}\r\n            className='card-img'\r\n            alt='...'\r\n            style={{borderRadius: 0}}\r\n          />\r\n        </div>\r\n        <div className='col-md-8'>\r\n          <div className='card-body' style={{borderRadius: 0}}>\r\n            <h5 className='card-title title'>{props.movie.title}</h5>\r\n            <p className='card-text overview'>{props.movie.overview}</p>\r\n            <p className='vote_average'>\r\n              <strong>Ratings</strong>: {props.movie.vote_average}\r\n              <span className='ml-1'>\r\n                <FontAwesomeIcon icon='star' style={{color: '#f1c40f'}} />\r\n              </span>\r\n            </p>\r\n            <p className='card-text'>\r\n              <small className='text-muted release_date'>\r\n                {props.movie.release_date}\r\n              </small>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\n// https://api.themoviedb.org/4/list/1?page=1\r\nconst AUTH_TOKEN =\r\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4ODdlOGVmMjE4OTg3MzBkZDJlNGE4NmMzYjQzMWE2MiIsInN1YiI6IjVmNjNkN2I4ODQ0NDhlMDAzOTY0ZTlhMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Wtu2oJrBrUWOKcOQzhNpp9As-LldDARUkaot28I9o9Y';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.themoviedb.org/4/list/',\r\n  headers: {Authorization: `Bearer ${AUTH_TOKEN}`},\r\n});\r\n","import {\r\n  GET_MOVIES,\r\n  GET_MORE_MOVIES,\r\n  RESET_NEXT_PAGE,\r\n  SET_SEARCH,\r\n} from '../constants/actionTypes';\r\nimport API from '../../utils/API';\r\n\r\nexport const getMovies = () => async dispatch => {\r\n  try {\r\n    const res = await API.get('1?page=1');\r\n    const movies = res.data;\r\n    const moviesData = movies.results;\r\n    // console.log(movies.results);\r\n    dispatch({\r\n      type: GET_MOVIES,\r\n      payload: {moviesData},\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getMoreMovies = nextPage => async dispatch => {\r\n  try {\r\n    const res = await API.get(`1?page=${nextPage}`);\r\n    const movies = res.data;\r\n    const moviesData = movies.results;\r\n    dispatch({\r\n      type: GET_MORE_MOVIES,\r\n      payload: {moviesData},\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const resetNextPage = () => ({\r\n  type: RESET_NEXT_PAGE,\r\n});\r\n\r\nexport const setSearch = search => ({\r\n  type: SET_SEARCH,\r\n  payload: {search},\r\n});\r\n","export const GET_MOVIES = 'GET_MOVIES';\r\nexport const GET_MORE_MOVIES = 'GET_MORE_MOVIES';\r\nexport const RESET_NEXT_PAGE = 'RESET_NEXT_PAGE';\r\nexport const SET_SEARCH = 'SET_SEARCH';\r\n","import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport React, {useEffect, useMemo, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {setSearch} from '../store/actions/action';\r\n\r\nexport function SearchMovie(props) {\r\n  const useSearchMovie = movies => {\r\n    const [query, setQuery] = useState('');\r\n    const [search, setSearch] = useState(movies);\r\n\r\n    useMemo(() => {\r\n      const result = movies.filter(movie => {\r\n        return movie.title.toLowerCase().includes(query.toLowerCase());\r\n      });\r\n      setSearch(result);\r\n    }, [movies, query]);\r\n    return {query, setQuery, search};\r\n  };\r\n\r\n  const handleSearch = e => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const {query, setQuery, search} = useSearchMovie(props.movies);\r\n  // props.setSearch(search);\r\n  useEffect(() => {\r\n    props.setSearch(search);\r\n  }, [props, search]);\r\n\r\n  return (\r\n    <div className='form-group'>\r\n      <label htmlFor='searchInput' className='searchInput text-center'>\r\n        Search Movie\r\n      </label>\r\n      <FontAwesomeIcon\r\n        icon='search'\r\n        className='ml-2'\r\n        style={{fontSize: 18, color: '#B0A5A6'}}\r\n      />\r\n      <input\r\n        type='text'\r\n        value={query}\r\n        onChange={handleSearch}\r\n        id='searchInput'\r\n        className='form-control'\r\n        style={{borderRadius: 0}}\r\n        placeholder='Type name movie you looking for...'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {\r\n  setSearch,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchMovie);\r\n","import React from 'react';\r\nimport Movie from './Movie';\r\nimport SearchMovie from './SearchMovie';\r\nimport {connect} from 'react-redux';\r\n\r\nexport function MovieList(props) {\r\n  return (\r\n    <div className='list-group' style={{paddingTop: 60}}>\r\n      <SearchMovie movies={props.movies} />\r\n      {props.filteredMovies.map(movie => (\r\n        <Movie key={movie.id} movie={movie} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  filteredMovies: state.filteredMovies,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieList);\r\n","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport MovieList from '../components/MovieList';\r\nimport {getMovies, getMoreMovies} from '../store/actions/action';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nexport const MovieListContainers = props => {\r\n  // console.log(props.movies);\r\n\r\n  useEffect(() => {\r\n    props.getMovies();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='col-md-8 offset-md-2 mt-5'>\r\n        <MovieList movies={props.movies} />\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <button\r\n            className='btn btn-block btn-lg p-3 mb-3 loadMore'\r\n            style={{backgroundColor: '#25b09c', color: '#fff', borderRadius: 0}}\r\n            onClick={() => props.getMoreMovies(props.nextPage)}\r\n          >\r\n            Load More\r\n            <FontAwesomeIcon className='ml-2 ' icon='sync' />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.movies,\r\n  nextPage: state.nextPage,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getMovies,\r\n  getMoreMovies,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MovieListContainers);\r\n","import {\r\n  GET_MORE_MOVIES,\r\n  GET_MOVIES,\r\n  RESET_NEXT_PAGE,\r\n  SET_SEARCH,\r\n} from '../constants/actionTypes';\r\n\r\nconst initialState = {\r\n  movies: [],\r\n  loading: true,\r\n  nextPage: 2,\r\n  filteredMovies: [],\r\n};\r\n\r\nexport default (state = initialState, {type, payload}) => {\r\n  switch (type) {\r\n    case GET_MOVIES:\r\n      return {...state, movies: payload.moviesData, loading: false};\r\n    case GET_MORE_MOVIES:\r\n      return {\r\n        ...state,\r\n        movies: [...state.movies, ...payload.moviesData],\r\n        // movies: state.movies.concat(payload.moviesData),\r\n        loading: false,\r\n        nextPage: state.nextPage + 1,\r\n      };\r\n    case RESET_NEXT_PAGE:\r\n      return {\r\n        ...state,\r\n        nextPage: 2,\r\n      };\r\n    case SET_SEARCH:\r\n      return {\r\n        ...state,\r\n        filteredMovies: payload.search,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n  // return state;\r\n};\r\n","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers/reducer';\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== 'undefined' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nexport default createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n","import {library} from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faLanguage,\r\n  faStar,\r\n  faSync,\r\n  faVoteYea,\r\n  faSearch,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport {fab} from '@fortawesome/free-brands-svg-icons';\r\n\r\nexport default library.add(\r\n  fab,\r\n  faStar,\r\n  faVoteYea,\r\n  faLanguage,\r\n  faSync,\r\n  faSearch\r\n);\r\n","import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport {useHistory, useLocation} from 'react-router-dom';\r\nimport {resetNextPage} from '../store/actions/action';\r\nimport {connect} from 'react-redux';\r\n\r\nexport function MovieDetails(props) {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const cardStyle = {\r\n    display: 'flex',\r\n    position: 'relative',\r\n    borderRadius: 0,\r\n  };\r\n\r\n  const closeStyle = {\r\n    position: 'absolute',\r\n    right: 18,\r\n    top: 9,\r\n    fontSize: 26,\r\n    zIndex: 1,\r\n    cursor: 'pointer',\r\n    color: '#000',\r\n  };\r\n  return (\r\n    <div className='container' style={{paddingTop: 60}}>\r\n      <div className='col-md-8 offset-md-2 mt-5'>\r\n        <div className='card mb-3 shadow-sm bg-white ' style={cardStyle}>\r\n          <button\r\n            type='button'\r\n            className='close'\r\n            aria-label='Close'\r\n            style={closeStyle}\r\n            onClick={() => {\r\n              props.resetNextPage();\r\n              history.push('/');\r\n            }}\r\n          >\r\n            <span aria-hidden='true'>&times;</span>\r\n          </button>\r\n          <div className='row no-gutters'>\r\n            <div className='col-md-4'>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500${location.state.movie.poster_path}`}\r\n                className='card-img'\r\n                alt='...'\r\n                style={{borderRadius: 0}}\r\n              />\r\n            </div>\r\n            <div className='col-md-8'>\r\n              <div className='card-body' style={{borderRadius: 0}}>\r\n                <h5 className='card-title title'>\r\n                  {location.state.movie.title}\r\n                </h5>\r\n                <p className='card-text overview'>\r\n                  {location.state.movie.overview}\r\n                </p>\r\n                <p className='original_language'>\r\n                  <strong>Language</strong>:{' '}\r\n                  {location.state.movie.original_language.toUpperCase()}\r\n                  <span className='ml-2'>\r\n                    <FontAwesomeIcon\r\n                      icon='language'\r\n                      style={{color: '#3498db', fontSize: '22'}}\r\n                    />\r\n                  </span>\r\n                </p>\r\n                <p className='vote_average'>\r\n                  <strong>Ratings</strong>: {location.state.movie.vote_average}\r\n                  <span className='ml-2'>\r\n                    <FontAwesomeIcon icon='star' style={{color: '#f1c40f'}} />\r\n                  </span>\r\n                </p>\r\n                <p className='vote_count'>\r\n                  <strong>Vote Count:</strong> {location.state.movie.vote_count}\r\n                  <span className='ml-2'>\r\n                    <FontAwesomeIcon\r\n                      icon='vote-yea'\r\n                      style={{color: '#2ecc71'}}\r\n                    />\r\n                  </span>\r\n                </p>\r\n                <p className='card-text release_date'>\r\n                  <small className='text-muted'>\r\n                    {location.state.movie.release_date}\r\n                  </small>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {\r\n  resetNextPage,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetails);\r\n","import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {resetNextPage} from '../store/actions/action';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nexport function Navigation(props) {\r\n  return (\r\n    <nav className='navbar navbar-primary bg-primary container-fluid fixed-top'>\r\n      <Link\r\n        to='/'\r\n        className='navbar-brand mb-0 h1 ml-5'\r\n        onClick={() => props.resetNextPage()}\r\n      >\r\n        theMovieDB API\r\n      </Link>\r\n      <a\r\n        target='_blank'\r\n        rel='noopener noreferrer'\r\n        href='https://github.com/ico4e/React-Redux-Axios-theMovieDB-API'\r\n        className='mr-5'\r\n        data-tip='Code Github'\r\n      >\r\n        <ReactTooltip place='bottom' type='dark' effect='solid' />\r\n        <FontAwesomeIcon icon={['fab', 'github']} style={{color: '#fff'}} />\r\n      </a>\r\n    </nav>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {\r\n  resetNextPage,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\r\n","import React from 'react';\r\nimport Navigation from './Navigation';\r\n\r\nexport default function Layout(props) {\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport './App.css';\nimport MovieListContainers from './containers/MovieListContainers';\nimport store from './store/store';\nimport './utils/fontawesome';\nimport MovieDetails from './components/MovieDetails';\nimport Layout from './components/Layout';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <div className='App'>\n          <Layout>\n            <Route exact path='/' component={MovieListContainers} />\n            <Route exact path='/details' component={MovieDetails} />\n          </Layout>\n        </div>\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}